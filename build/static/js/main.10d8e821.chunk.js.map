{"version":3,"sources":["components/Wrapper/index.js","components/Title/index.js","components/FilterDropdown/index.js","components/ColumnHeader/index.js","components/TableHeader/index.js","components/TableRow/index.js","components/TableBody/index.js","utils/makeEmployees.js","components/Table/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","Title","title","FilterDropDown","data-toggle","aria-haspopup","aria-expanded","type","placeholder","onChange","filterColumns","fieldName","ColumnHeader","direction","useState","sortDirection","setSortDirection","console","log","scope","columnName","onClick","FilterDropdown","getFieldName","columnNameWords","split","toLowerCase","join","TableHeader","columnNames","map","key","indexOf","TableRow","item","employeeId","firstName","lastName","TableBody","data","require","uniqueNamesGenerator","names","makeEmployee","uniqueNames","dictionaries","length","separator","Math","floor","random","makeEmployees","numberOfEmployees","i","employees","push","Table","sorts","filters","state","filterValue","hasKey","employeesCopy","filter","employee","toString","includes","setState","mapBySorts","sortDefinition","currentDefinition","splice","forEach","sort","this","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10d8e821.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"container-fluid\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"jumbotron\">{props.title}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction FilterDropDown(props) {\n\n  return <span className=\"dropdown\">\n      <button className=\"btn btn-sm\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n      <span className=\"fas fa-filter\"></span>\n    </button>\n    <div className=\"dropdown-menu\">\n    <input className=\"form-control\" \n      type=\"text\" \n      placeholder=\"Filter by\" \n      onChange={() => props.filterColumns(props.fieldName, \"a\")}></input>\n    </div>\n  </span>\n}\n\nexport default FilterDropDown;\n","import React, {useState} from \"react\"\nimport FilterDropdown from \"../FilterDropdown\"\n\nfunction ColumnHeader(props){\n    const [sortDirection, setSortDirection] = useState(0)\n\n    console.log(props.fieldName)\n\n    const toggle = (direction) => setSortDirection(direction => {\n        if(direction === 0)\n            return 1;\n        else if (direction === 1)\n            return -1\n        else\n            return 0\n    })\n\n    const getArrow = direction => {\n        if(direction === -1)\n            return \"fas fa-sort-down\";\n        else if (direction === 1)\n            return \"fas fa-sort-up\"\n        else\n            return \"fas fa-sort\"\n    }\n\n    return <th scope=\"col\">\n        <span>\n            {props.columnName}\n            {\" \"}\n            <button className=\"btn btn-sm\" onClick={() => toggle(sortDirection)}>\n                <span className={getArrow(sortDirection)}></span>\n            </button>\n            <FilterDropdown  fieldName={props.fieldName} filterColumns={props.filterColumns}/>\n        </span>\n    </th>\n}\n\nexport default ColumnHeader","import React from \"react\"\nimport ColumnHeader from \"../ColumnHeader\"\n\nfunction getFieldName(columnName)\n{\n    let columnNameWords = columnName.split(' ');\n    columnNameWords[0] = columnNameWords[0].toLowerCase()\n    return columnNameWords.join('');\n}\n\n\nfunction TableHeader(props){\n    return <thead>\n        <tr>\n            {props.columnNames.map(columnName => \n                <ColumnHeader \n                    key={props.columnNames.indexOf(columnName)}\n                    columnName={columnName}\n                    fieldName={getFieldName(columnName)}\n                    filterColumns={props.filterColumns}/>\n                )}\n        </tr>\n    </thead>\n}\n\nexport default TableHeader","import React from \"react\"\n\nfunction TableRow({item}){\n    return <tr >\n            <th scope=\"row\">{item.employeeId}</th>\n            <td >{item.firstName}</td>\n            <td >{item.lastName}</td>\n        </tr>\n}\n\nexport default TableRow","import React from \"react\";\nimport \"./style.css\";\nimport TableRow from \"../TableRow\"\n\nfunction TableBody(props) {\n  \n  return (\n    <tbody>\n      {props.data.map(item => (\n        <TableRow \n          key={item.employeeId}\n          item={item} />\n      ))}\n    </tbody>\n  );\n}\n\nexport default TableBody;\n","const {uniqueNamesGenerator, names} = require('unique-names-generator');\n\nconst makeEmployee = () => {\n   const uniqueNames = uniqueNamesGenerator({ \n       dictionaries: [names, names], \n       length: 2, \n       separator: ' '\n    }).split(' ');\n\n    return {\n        employeeId: Math.floor(10000 * Math.random()) + Math.floor(1000 * Math.random()),\n        firstName: uniqueNames[0],\n        lastName: uniqueNames[1]\n    }\n}\n\nfunction makeEmployees(numberOfEmployees){\n    const employees = [];\n    let i;\n    for(i = 0; i < numberOfEmployees; i++){\n        employees.push(makeEmployee())\n    }\n    return employees;\n}\n\n\nexport default makeEmployees;","import React from \"react\";\nimport \"./style.css\";\nimport TableHeader from \"../TableHeader\"\nimport TableBody from \"../TableBody\"\n\nimport makeEmployees from \"../../utils/makeEmployees\"\n\nclass Table extends React.Component {\n\n  employees = makeEmployees(5)\n  sorts = [];\n  filters = {};\n\n  state = {\n    employees: this.employees\n  };\n\n  filterColumns = (fieldName, filterValue) => {\n\n    if(filterValue.length === 0){\n      if(this.filters.hasKey(fieldName))\n        delete this.filters[fieldName];\n    }\n    else{\n      this.filters[fieldName] = filterValue\n    }\n\n    let employeesCopy = [...this.employees];\n\n    for(var key in this.filters){\n      employeesCopy = employeesCopy.filter(employee => {\n        employee[key].toString().toLowerCase().includes(filterValue.toLowerCase());\n      })\n    }\n\n    this.setState({employees: employeesCopy});\n  }\n\n  mapBySorts = (sortDefinition) => {\n    let employeesCopy = [...this.employees]\n\n    let currentDefinition = this.sorts.filter(item => item.fieldName === sortDefinition.fieldName);\n\n    if(sortDefinition.direction === 0)\n      this.sorts.splice(this.sorts.indexOf(currentDefinition),1)\n    else\n      this.sorts[this.sorts.indexOf(currentDefinition)].direction = sortDefinition.direction; \n      \n    this.sorts.forEach(sort => {\n      employeesCopy = employeesCopy\n    })\n    \n  }\n\n  render() {\n    return (    \n      <table className=\"table\">\n        <TableHeader columnNames={[\"#\", \"First Name\", \"Last Name\"]} filterColumns={this.filterColumns} />\n        <TableBody data={this.state.employees} />\n      </table>\n    )\n  };\n}\n\nexport default Table;\n","import React, {Component, useState} from \"react\";\nimport Wrapper from \"./components/Wrapper/index\"\nimport Title from \"./components/Title/index\"\nimport Table from \"./components/Table\"\n\nfunction App() {\n\n  return (\n    <Wrapper>\n      <Title title=\"Employees\"/>\n      <Table />\n    </Wrapper>\n  )\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}